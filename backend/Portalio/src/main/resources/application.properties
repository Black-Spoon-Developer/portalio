spring.application.name=Portalio

#env
spring.config.import=optional:file:.env[.properties]

# MySQL EC2 Setting
spring.datasource.driver-class-name=${mysql}
spring.datasource.url=jdbc:mysql://${MYSQL_HOST}:${MYSQL_PORT}/${MYSQL_DB}
spring.datasource.username=${MYSQL_USER}
spring.datasource.password=${MYSQL_PASSWORD}

spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

spring.sql.init.mode=${SQL_MODE}
spring.sql.init.encoding=${SQL_ENCODING}
spring.jpa.defer-datasource-initialization=${JPA_DEFET}

# MongoDB Setting
spring.data.mongodb.uri=${MONGO_URI}


# JPA Setting
spring.jpa.hibernate.ddl-auto=${JPA_DDL}
spring.jpa.hibernate.naming.physical-strategy=${HIBERNATE_MODEL}

# JWT SecretKey
spring.jwt.secret=${JWT_SECRET_KEY}

# nginx forward-header-strategy
server.forward-headers-strategy=${NGINX_STRATEGY}

# trace SQL
## Log Hibernate SQL statements through logger
logging.level.org.hibernate.SQL=${SQL_LEVEL}
## Parameter tracing
logging.level.org.hibernate.type=${SQL_TYPE}

# Swagger UI ???
springdoc.swagger-ui.enabled=true

# S3
cloud.aws.credentials.access-key=${AWS_CREDENTIALS_ACCESSKEY}
cloud.aws.credentials.secret-key=${AWS_CRETENDIALS_SECRETKEY}
cloud.aws.s3.bucket-name=${AWS_S3_BUCKETNAME}
cloud.aws.region.static=${AWS_REGION_STATIC}
cloud.aws.stack.auto=${AWS_STACK}




spring.servlet.multipart.max-file-size=${S3_SIZE}
spring.servlet.multipart.max-request-size=${S3_REQUEST_SIZE}

# oAuth
# google
# registration
spring.security.oauth2.client.registration.google.client-name=${OAUTH2_NAME_GOOGLE}
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.redirect-uri=${GOOGLE_REDIRECT_URI}
spring.security.oauth2.client.registration.google.authorization-grant-type=${GOOGLE_AUTHORIZATION}
spring.security.oauth2.client.registration.google.scope=${GOOGLE_SCOPE}


# naver
# registration
spring.security.oauth2.client.registration.naver.client-name=${OAUTH2_NAME_NAVER}
spring.security.oauth2.client.registration.naver.client-id=${NAVER_CLIENT_ID}
spring.security.oauth2.client.registration.naver.client-secret=${NAVER_CLIENT_SECRET}
spring.security.oauth2.client.registration.naver.redirect-uri=${NAVER_REDIRECT_URI}
spring.security.oauth2.client.registration.naver.authorization-grant-type=${NAVER_AUTHORIZATION}
spring.security.oauth2.client.registration.naver.scope=${NAVER_SCOPE}

# provider
spring.security.oauth2.client.provider.naver.authorization-uri=${NAVER_AUTHORIZE}
spring.security.oauth2.client.provider.naver.token-uri=${NAVER_TOKEN}
spring.security.oauth2.client.provider.naver.user-info-uri=${OPENAPI_URL}
spring.security.oauth2.client.provider.naver.user-name-attribute=${ATTRIBUTE}
